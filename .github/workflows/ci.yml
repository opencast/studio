name: Build & test

on: [pull_request, push]

jobs:
  main:
    # We don't build PRs from dependabot, as we run everything for its branch push anyway
    if: github.actor != 'dependabot[bot]' || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 17
    - run: npm ci
    - run: npx eslint src --max-warnings=0
    - run: npm run build:dev
    - run: npm run typecheck


    # Prepare test deployment
    - name: Build for test deployment
      run: |
        builddate="$(date --utc '+%Y-%m-%d_%H-%M-%S')"
        buildno="$(printf '%06d' "${{ github.run_id }}")"
        if [[ $GITHUB_REF == refs/pull/* ]]; then
          tmp="${GITHUB_REF#refs/pull/}"
          prnum="${tmp%/merge}"
          deploydir="${builddate}-pr${prnum}-${buildno}"
        else
          branch="${GITHUB_REF#refs/heads/}"
          deploydir="${builddate}-${{ github.repository_owner }}-${buildno}-${branch}"
        fi
        deploydir="/$(echo "${deploydir}" | LC_ALL=C sed -e 's/[^a-zA-Z0-9\-_]/-/g')"
        echo ${deploydir} > deploydir.tmp
        PUBLIC_PATH=${deploydir} npm run build:release

    - name: Archive test deployment files as artifact
      uses: actions/upload-artifact@v4
      with:
        name: test-deployment-files
        include-hidden-files: true
        path: |
          build
          .github/.deploy-settings.toml
          deploydir.tmp

    # Prepare production deployment
    - name: Build for prod deployment
      if: github.repository_owner == 'opencast' && github.ref == 'refs/heads/main'
      run: |
        rm -rf build
        npm run build:release

    - name: Archive prod deployment files as artifact
      if: github.repository_owner == 'opencast' && github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: prod-deployment-files
        include-hidden-files: true
        path: |
          build
          .github/.deploy-settings.toml
